<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FrappMdl', 'doctrine');

/**
 * BaseFrappMdl
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $slug
 * @property string $name
 * @property string $type_key
 * @property integer $frapp_id
 * @property Frapp $Frapp
 * @property Doctrine_Collection $Mdl_Blog_Post
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getSlug()          Returns the current record's "slug" value
 * @method string              getName()          Returns the current record's "name" value
 * @method string              getTypeKey()       Returns the current record's "type_key" value
 * @method integer             getFrappId()       Returns the current record's "frapp_id" value
 * @method Frapp               getFrapp()         Returns the current record's "Frapp" value
 * @method Doctrine_Collection getMdlBlogPost()   Returns the current record's "Mdl_Blog_Post" collection
 * @method FrappMdl            setId()            Sets the current record's "id" value
 * @method FrappMdl            setSlug()          Sets the current record's "slug" value
 * @method FrappMdl            setName()          Sets the current record's "name" value
 * @method FrappMdl            setTypeKey()       Sets the current record's "type_key" value
 * @method FrappMdl            setFrappId()       Sets the current record's "frapp_id" value
 * @method FrappMdl            setFrapp()         Sets the current record's "Frapp" value
 * @method FrappMdl            setMdlBlogPost()   Sets the current record's "Mdl_Blog_Post" collection
 * 
 * @package    newe
 * @subpackage model
 * @author     Iulian Manea <iulian.manea@impurelabs.com>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseFrappMdl extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('frapp_mdl');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('type_key', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('frapp_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'collate' => 'utf8_unicode_ci',
             'charset' => 'utf8',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Frapp', array(
             'local' => 'frapp_id',
             'foreign' => 'id'));

        $this->hasMany('Mdl_Blog_Post', array(
             'local' => 'id',
             'foreign' => 'mdl_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'frapp_id',
             ),
             ));
        $sortable0 = new Doctrine_Template_Sortable(array(
             'uniqueBy' => 
             array(
              0 => 'frapp_id',
             ),
             ));
        $this->actAs($sluggable0);
        $this->actAs($sortable0);
    }
}