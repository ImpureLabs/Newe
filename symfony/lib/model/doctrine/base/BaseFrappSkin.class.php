<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FrappSkin', 'doctrine');

/**
 * BaseFrappSkin
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property text $description
 * @property enum $state
 * @property integer $author_id
 * @property Account $Author
 * @property Doctrine_Collection $Frapp
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method text                getDescription() Returns the current record's "description" value
 * @method enum                getState()       Returns the current record's "state" value
 * @method integer             getAuthorId()    Returns the current record's "author_id" value
 * @method Account             getAuthor()      Returns the current record's "Author" value
 * @method Doctrine_Collection getFrapp()       Returns the current record's "Frapp" collection
 * @method FrappSkin           setId()          Sets the current record's "id" value
 * @method FrappSkin           setName()        Sets the current record's "name" value
 * @method FrappSkin           setDescription() Sets the current record's "description" value
 * @method FrappSkin           setState()       Sets the current record's "state" value
 * @method FrappSkin           setAuthorId()    Sets the current record's "author_id" value
 * @method FrappSkin           setAuthor()      Sets the current record's "Author" value
 * @method FrappSkin           setFrapp()       Sets the current record's "Frapp" collection
 * 
 * @package    newe
 * @subpackage model
 * @author     Iulian Manea <iulian.manea@impurelabs.com>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseFrappSkin extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('frapp_skin');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('state', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 0,
              1 => 1,
             ),
             ));
        $this->hasColumn('author_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 4,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account as Author', array(
             'local' => 'author_id',
             'foreign' => 'id'));

        $this->hasMany('Frapp', array(
             'local' => 'id',
             'foreign' => 'skin_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}