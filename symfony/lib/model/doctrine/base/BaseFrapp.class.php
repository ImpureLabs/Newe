<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Frapp', 'doctrine');

/**
 * BaseFrapp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property array $admins
 * @property string $slug
 * @property string $slogan
 * @property string $state
 * @property string $filename
 * @property integer $logo_x1
 * @property integer $logo_y1
 * @property integer $logo_x2
 * @property integer $logo_y2
 * @property integer $sourceimage_w
 * @property integer $sourceimage_h
 * @property bool $state_support_sponsor
 * @property bool $sponsor_accept_pledge
 * @property integer $sponsor_goal
 * @property bool $state_support_campaign
 * @property bool $campaign_raise_money
 * @property bool $state_support_promote
 * @property bool $state_support_petition
 * @property integer $parent_id
 * @property integer $creator_id
 * @property integer $skin_id
 * @property Account $Account
 * @property Doctrine_Collection $Mdls
 * @property FrappSkin $Skin
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method string              getName()                   Returns the current record's "name" value
 * @method array               getAdmins()                 Returns the current record's "admins" value
 * @method string              getSlug()                   Returns the current record's "slug" value
 * @method string              getSlogan()                 Returns the current record's "slogan" value
 * @method string              getState()                  Returns the current record's "state" value
 * @method string              getFilename()               Returns the current record's "filename" value
 * @method integer             getLogoX1()                 Returns the current record's "logo_x1" value
 * @method integer             getLogoY1()                 Returns the current record's "logo_y1" value
 * @method integer             getLogoX2()                 Returns the current record's "logo_x2" value
 * @method integer             getLogoY2()                 Returns the current record's "logo_y2" value
 * @method integer             getSourceimageW()           Returns the current record's "sourceimage_w" value
 * @method integer             getSourceimageH()           Returns the current record's "sourceimage_h" value
 * @method bool                getStateSupportSponsor()    Returns the current record's "state_support_sponsor" value
 * @method bool                getSponsorAcceptPledge()    Returns the current record's "sponsor_accept_pledge" value
 * @method integer             getSponsorGoal()            Returns the current record's "sponsor_goal" value
 * @method bool                getStateSupportCampaign()   Returns the current record's "state_support_campaign" value
 * @method bool                getCampaignRaiseMoney()     Returns the current record's "campaign_raise_money" value
 * @method bool                getStateSupportPromote()    Returns the current record's "state_support_promote" value
 * @method bool                getStateSupportPetition()   Returns the current record's "state_support_petition" value
 * @method integer             getParentId()               Returns the current record's "parent_id" value
 * @method integer             getCreatorId()              Returns the current record's "creator_id" value
 * @method integer             getSkinId()                 Returns the current record's "skin_id" value
 * @method Account             getAccount()                Returns the current record's "Account" value
 * @method Doctrine_Collection getMdls()                   Returns the current record's "Mdls" collection
 * @method FrappSkin           getSkin()                   Returns the current record's "Skin" value
 * @method Frapp               setId()                     Sets the current record's "id" value
 * @method Frapp               setName()                   Sets the current record's "name" value
 * @method Frapp               setAdmins()                 Sets the current record's "admins" value
 * @method Frapp               setSlug()                   Sets the current record's "slug" value
 * @method Frapp               setSlogan()                 Sets the current record's "slogan" value
 * @method Frapp               setState()                  Sets the current record's "state" value
 * @method Frapp               setFilename()               Sets the current record's "filename" value
 * @method Frapp               setLogoX1()                 Sets the current record's "logo_x1" value
 * @method Frapp               setLogoY1()                 Sets the current record's "logo_y1" value
 * @method Frapp               setLogoX2()                 Sets the current record's "logo_x2" value
 * @method Frapp               setLogoY2()                 Sets the current record's "logo_y2" value
 * @method Frapp               setSourceimageW()           Sets the current record's "sourceimage_w" value
 * @method Frapp               setSourceimageH()           Sets the current record's "sourceimage_h" value
 * @method Frapp               setStateSupportSponsor()    Sets the current record's "state_support_sponsor" value
 * @method Frapp               setSponsorAcceptPledge()    Sets the current record's "sponsor_accept_pledge" value
 * @method Frapp               setSponsorGoal()            Sets the current record's "sponsor_goal" value
 * @method Frapp               setStateSupportCampaign()   Sets the current record's "state_support_campaign" value
 * @method Frapp               setCampaignRaiseMoney()     Sets the current record's "campaign_raise_money" value
 * @method Frapp               setStateSupportPromote()    Sets the current record's "state_support_promote" value
 * @method Frapp               setStateSupportPetition()   Sets the current record's "state_support_petition" value
 * @method Frapp               setParentId()               Sets the current record's "parent_id" value
 * @method Frapp               setCreatorId()              Sets the current record's "creator_id" value
 * @method Frapp               setSkinId()                 Sets the current record's "skin_id" value
 * @method Frapp               setAccount()                Sets the current record's "Account" value
 * @method Frapp               setMdls()                   Sets the current record's "Mdls" collection
 * @method Frapp               setSkin()                   Sets the current record's "Skin" value
 * 
 * @package    newe
 * @subpackage model
 * @author     Iulian Manea <iulian.manea@impurelabs.com>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseFrapp extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('frapp');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('admins', 'array', null, array(
             'type' => 'array',
             ));
        $this->hasColumn('slug', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('slogan', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('state', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('filename', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('logo_x1', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('logo_y1', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('logo_x2', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('logo_y2', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('sourceimage_w', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('sourceimage_h', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('state_support_sponsor', 'bool', null, array(
             'type' => 'bool',
             'default' => '0',
             ));
        $this->hasColumn('sponsor_accept_pledge', 'bool', null, array(
             'type' => 'bool',
             'default' => '0',
             ));
        $this->hasColumn('sponsor_goal', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('state_support_campaign', 'bool', null, array(
             'type' => 'bool',
             'default' => '0',
             ));
        $this->hasColumn('campaign_raise_money', 'bool', null, array(
             'type' => 'bool',
             'default' => '0',
             ));
        $this->hasColumn('state_support_promote', 'bool', null, array(
             'type' => 'bool',
             'default' => '0',
             ));
        $this->hasColumn('state_support_petition', 'bool', null, array(
             'type' => 'bool',
             'default' => '0',
             ));
        $this->hasColumn('parent_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 4,
             ));
        $this->hasColumn('creator_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('skin_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'collate' => 'utf8_unicode_ci',
             'charset' => 'utf8',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'creator_id',
             'foreign' => 'id'));

        $this->hasMany('FrappMdl as Mdls', array(
             'local' => 'id',
             'foreign' => 'frapp_id',
             'cascade' => array(
             0 => 'delete',
             )));

        $this->hasOne('FrappSkin as Skin', array(
             'local' => 'skin_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}