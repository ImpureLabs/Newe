<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Location', 'doctrine');

/**
 * BaseLocation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $city
 * @property string $region
 * @property string $country
 * @property string $lang
 * @property integer $population
 * @property Doctrine_Collection $ProfileCompany
 * @property Doctrine_Collection $ProfileOrganization
 * @property Doctrine_Collection $ProfilePerson
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getCity()                Returns the current record's "city" value
 * @method string              getRegion()              Returns the current record's "region" value
 * @method string              getCountry()             Returns the current record's "country" value
 * @method string              getLang()                Returns the current record's "lang" value
 * @method integer             getPopulation()          Returns the current record's "population" value
 * @method Doctrine_Collection getProfileCompany()      Returns the current record's "ProfileCompany" collection
 * @method Doctrine_Collection getProfileOrganization() Returns the current record's "ProfileOrganization" collection
 * @method Doctrine_Collection getProfilePerson()       Returns the current record's "ProfilePerson" collection
 * @method Location            setId()                  Sets the current record's "id" value
 * @method Location            setCity()                Sets the current record's "city" value
 * @method Location            setRegion()              Sets the current record's "region" value
 * @method Location            setCountry()             Sets the current record's "country" value
 * @method Location            setLang()                Sets the current record's "lang" value
 * @method Location            setPopulation()          Sets the current record's "population" value
 * @method Location            setProfileCompany()      Sets the current record's "ProfileCompany" collection
 * @method Location            setProfileOrganization() Sets the current record's "ProfileOrganization" collection
 * @method Location            setProfilePerson()       Sets the current record's "ProfilePerson" collection
 * 
 * @package    newe
 * @subpackage model
 * @author     Iulian Manea <iulian.manea@impurelabs.com>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseLocation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('location');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('city', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('region', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('country', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('lang', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2,
             ));
        $this->hasColumn('population', 'integer', 3, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => '0',
             'notnull' => true,
             'length' => 3,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ProfileCompany', array(
             'local' => 'id',
             'foreign' => 'location_id'));

        $this->hasMany('ProfileOrganization', array(
             'local' => 'id',
             'foreign' => 'location_id'));

        $this->hasMany('ProfilePerson', array(
             'local' => 'id',
             'foreign' => 'location_id'));
    }
}