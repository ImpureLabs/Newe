<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AccountForgotPassword', 'doctrine');

/**
 * BaseAccountForgotPassword
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $account_id
 * @property string $unique_key
 * @property timestamp $expires_at
 * @property Account $Account
 * 
 * @method integer               getAccountId()  Returns the current record's "account_id" value
 * @method string                getUniqueKey()  Returns the current record's "unique_key" value
 * @method timestamp             getExpiresAt()  Returns the current record's "expires_at" value
 * @method Account               getAccount()    Returns the current record's "Account" value
 * @method AccountForgotPassword setAccountId()  Sets the current record's "account_id" value
 * @method AccountForgotPassword setUniqueKey()  Sets the current record's "unique_key" value
 * @method AccountForgotPassword setExpiresAt()  Sets the current record's "expires_at" value
 * @method AccountForgotPassword setAccount()    Sets the current record's "Account" value
 * 
 * @package    newe
 * @subpackage model
 * @author     Iulian Manea <iulian.manea@impurelabs.com>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseAccountForgotPassword extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('account_forgot_password');
        $this->hasColumn('account_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('unique_key', 'string', 255, array(
             'type' => 'string',
             'primary' => true,
             'length' => 255,
             ));
        $this->hasColumn('expires_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => 25,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'collate' => 'utf8_unicode_ci',
             'charset' => 'utf8',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'account_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}